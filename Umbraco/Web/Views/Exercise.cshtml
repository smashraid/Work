@using System.Web.Optimization
@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@{
    Layout = "_Section.cshtml";
}
<div class="container">
    <div class="header">
        <ul>
            <li class="tabOn"><a href="#"><span>Exercise Repository</span> </a></li>
        </ul>
        <div class="top">
        </div>
    </div>
    <div class="title">
    </div>
    <div class="wrap">
        <div class="content tabpagescrollinglayer" id="tabSection">
            @Umbraco.Field("body")
            <div>
                <div class="control-group">
                    <label class="control-label" for="name">
                        Name</label>
                    <div class="controls">
                        <input id="name" type="text" name="name" placeholder="Name" value="">
                    </div>
                </div>
                <div class="control-group">
                    <div class="controls">
                        <button class="btn btn-primary" id="addcategory">
                            Add Category
                        </button>
                    </div>
                </div>
            </div>
            <div id="pnlForm">
                <table id="grid">
                </table>
                <div id="pager">
                </div>
            </div>
        </div>
    </div>
</div>
<div class="footer">
    <div class="left">
    </div>
    <div class="right">
    </div>
</div>
@section script
{
    @Scripts.Render("~/scripts/jquery.jqgrid")
    <script type="text/javascript">
        $(document).ready(function () {
            if ($('#pnlForm').length) {
                var lastSel;
                $('#grid').jqGrid({
                    datatype: function () {
                        var pageSize = $('#grid').getGridParam('rowNum');
                        var currentPage = $('#grid').getGridParam('page');
                        var sortColumn = $('#grid').getGridParam('sortname');
                        var sortOrder = $('#grid').getGridParam('sortorder');
                        var isSearch = $('#grid').getGridParam('search');
                        var searchOptions;
                        var searchField = '';
                        var searchOper = '';
                        var searchString = '';
                        var filters = '';
                        if (isSearch == true) { //Obtiene los parámetros de busqueda en caso de que la variable _search sea true
                            searchOptions = $('#grid').getGridParam('postData');
                            searchField = searchOptions.searchField;
                            searchOper = searchOptions.searchOper;
                            searchString = searchOptions.searchString;
                            filters = searchOptions.filters;
                        }
                        var grid = {
                            //Parametros de entrada
                            PageSize: pageSize,
                            CurrentPage: currentPage,
                            SortColumn: sortColumn,
                            SortOrder: sortOrder,
                            IsSearch: isSearch,
                            SearchField: searchField,
                            SearchValue: searchString,
                            SearchOper: searchOper,
                            Filters: filters
                        };

                        var json = JSON.stringify(grid);
                        $.ajax({
                            url: '/umbraco/surface/DataTypeSurface/GetExerciseTrainer',
                            cache: false,
                            data: json,
                            dataType: 'json',
                            type: 'POST',
                            contentType: 'application/json; charset=utf-8',
                            success: function (data, state) { //success: function (data, textStatus, jqXHR) {
                                if (state == 'success') {
                                    $('#grid')[0].addJSONData(data);
                                }
                            },
                            error: function (xhr, ajaxOptions, thrownError) { //error: function (jqXHR, textStatus, errorThrown) {
                                alert('Error: ' + xhr.status + ' ' + xhr.statusText);
                            }
                        });
                    },
                    jsonReader: {
                        root: 'root',
                        page: 'page',
                        total: 'total',
                        records: 'records',
                        repeatitems: true,
                        cell: 'cell',
                        id: 'id'
                    },
                    colModel: [//Columns
                        {name: 'Id', index: 'Id', width: 80, align: 'center', label: 'Id', hidden: false, sortable: true, search: true, stype: 'text', searchrules: { integer: true }, searchoptions: { sopt: ['eq', 'ne', 'lt', 'le', 'gt', 'ge'] }, edittype: 'text', formatter: 'integer', editoptions: { readonly: true, size: 10} },
                        { name: 'Category', index: 'Category', width: 150, align: 'left', label: 'Category', hidden: false, sortable: true, search: true, stype: 'text', searchoptions: { sopt: ['eq', 'bw', 'bn', 'ew', 'en', 'cn', 'nc'] }, editable: true, edittype: 'select', editoptions: { dataUrl: '/umbraco/surface/DataTypeSurface/GetPrevalue?id=1085'} },
                        { name: 'ExerciseName', index: 'ExerciseName', width: 200, align: 'center', label: 'Exercise', hidden: false, sortable: true, search: false, editable: true, edittype: 'text', editrules: { edithidden: true, required: true }, editoptions: { size: 40, maxlength: 45} },
                        { name: 'IsActive', index: 'IsActive', width: 150, align: 'center', label: 'IsActive', hidden: false, sortable: true, search: true, stype: 'text', searchoptions: { sopt: ['eq', 'bw', 'bn', 'ew', 'en', 'cn', 'nc'] }, editable: true, edittype: "checkbox", editoptions: { value: "True:False"} },
                        { name: 'CategoryId', index: 'CategoryId', width: 80, align: 'center', label: 'CategoryId', hidden: true, sortable: true, search: true, stype: 'text', searchrules: { integer: true }, searchoptions: { sopt: ['eq', 'ne', 'lt', 'le', 'gt', 'ge'] }, editable: false }
                    ],
                    editurl: '/umbraco/surface/DataTypeSurface/SetExerciseTrainer',
                    pager: '#pager', //Pager.
                    loadtext: 'Cargando datos...',
                    recordtext: '{0} - {1} de {2} elementos',
                    emptyrecords: 'No hay resultados',
                    pgtext: 'Pág: {0} de {1}', //Paging input control text format.
                    rowNum: '10', // PageSize.
                    rowList: [10, 20, 30, 40], //Variable PageSize DropDownList. 
                    viewrecords: true, //Show the RecordCount in the pager.
                    multiselect: false,
                    sortname: 'Id', //Default SortColumn
                    sortorder: 'asc', //Default SortOrder.
                    width: '850',
                    height: '400',
                    imgpath: '/css/ui/images',
                    caption: 'Exercise'
                }).navGrid('#pager',
                    { edit: false, add: false, del: false, search: false, view: false },
                    {}, //Options for the Edit Dialog
                    {}, //Options for the Add Dialog
                    {}, //Options for Delete
                    {}, //Options for Search
                    {}  //Options for View
                ).inlineNav('#pager',
                    {
                        addParams: { useFormatter: false },
                        editParams: {
                            aftersavefunc: function (rowid, result) {
                                $('#grid').trigger('reloadGrid');
                            }
                        }
                    });
            }

            $('#addcategory').click(function (e) {
                $.post('/umbraco/surface/HelperSurface/SetCategory', { name: $('#name').val() }, function (data) {
                    $('#name').val('');
                    alert(data);
                });
            });


        });
    </script>
}
@section css
{
    @Styles.Render("~/css/jqgrid/jqgrid")
}
			