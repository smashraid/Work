@model Dictionary<string, string>
@{
    Dictionary<string, string> x = (Dictionary<string, string>)Model;
    string gymnastId = Model["gymnastid"];
    string memberId = Model["memberid"];
}
<div id="content-measurement" class="row-fluid">
    <div class="row-fluid">
        
            <div id="dataInfo" class="span5" >
                <fieldset data-bind="with:measurement">
                    <legend>Member Progress </legend><span></span>
                    <div class="span4">
                        <div class="control-group">
                            <label class="control-label">
                                Weight</label>
                            <div class="controls">
                                <span class="input-small uneditable-input" data-bind="text: Weight"></span>
                            </div>
                        </div>
                        <div class="control-group">
                            <label class="control-label">
                                Neck</label>
                            <div class="controls">
                                <span class="input-small uneditable-input" data-bind="text: Neck"></span>
                            </div>
                        </div>
                        <div class="control-group">
                            <label class="control-label">
                                Shoulders</label>
                            <div class="controls">
                                <span class="input-small uneditable-input" data-bind="text: Shoulders"></span>
                            </div>
                        </div>
                        <div class="control-group">
                            <label class="control-label">
                                Right Arm</label>
                            <div class="controls">
                                <span class="input-small uneditable-input" data-bind="text: RightArm"></span>
                            </div>
                        </div>
                        <div class="control-group">
                            <label class="control-label">
                                Left Arm</label>
                            <div class="controls">
                                <span class="input-small uneditable-input" data-bind="text: LeftArm"></span>
                            </div>
                        </div>
                        <div class="control-group">
                            <label class="control-label">
                                Chest</label>
                            <div class="controls">
                                <span class="input-small uneditable-input" data-bind="text: Chest"></span>
                            </div>
                        </div>
                        <div class="control-group">
                            <label class="control-label">
                                Belly Button</label>
                            <div class="controls">
                                <span class="input-small uneditable-input" data-bind="text: BellyButton"></span>
                            </div>
                        </div>
                        <div class="control-group">
                            <label class="control-label">
                                Hips</label>
                            <div class="controls">
                                <span class="input-small uneditable-input" data-bind="text: Hips"></span>
                            </div>
                        </div>
                    </div>
                    <div class="span4">
                        <div class="control-group">
                            <label class="control-label">
                                Right Thigh</label>
                            <div class="controls">
                                <span class="input-small uneditable-input" data-bind="text: RightThigh"></span>
                            </div>
                        </div>
                        <div class="control-group">
                            <label class="control-label">
                                Left Thigh</label>
                            <div class="controls">
                                <span class="input-small uneditable-input" data-bind="text: LeftThigh"></span>
                            </div>
                        </div>
                        <div class="control-group">
                            <label class="control-label">
                                Right Calf</label>
                            <div class="controls">
                                <span class="input-small uneditable-input" data-bind="text: RightCalf"></span>
                            </div>
                        </div>
                        <div class="control-group">
                            <label class="control-label">
                                Left Calf</label>
                            <div class="controls">
                                <span class="input-small uneditable-input" data-bind="text: LeftCalf"></span>
                            </div>
                        </div>
                        <div class="control-group">
                            <label class="control-label">
                                Arm</label>
                            <div class="controls">
                                <span class="input-small uneditable-input" data-bind="text: Arm"></span>
                            </div>
                        </div>
                        <div class="control-group">
                            <label class="control-label">
                                Waist</label>
                            <div class="controls">
                                <span class="input-small uneditable-input" data-bind="text: Waist"></span>
                            </div>
                        </div>
                        <div class="control-group">
                            <label class="control-label">
                                Thigh</label>
                            <div class="controls">
                                <span class="input-small uneditable-input" data-bind="text: Thigh"></span>
                            </div>
                        </div>
                        <div class="control-group">
                            <label class="control-label">
                                Back</label>
                            <div class="controls">
                                <span class="input-small uneditable-input" data-bind="text: Back"></span>
                            </div>
                        </div>
                    </div>
                </fieldset>
            </div>
            <div id="slider" class="span4">
                <fieldset>
                    <legend>Photos</legend>
                    <div id="slideshow" data-bind="foreach: photos" class="row-fluid">
                        <img data-bind="attr: { src: Base64 }" alt="" />
                    </div>
                    <ul id="nav" data-bind="foreach: photos" class="row-fluid">
                        <li><a href="#">
                                <img data-bind="attr: { src: Base64 }" alt="" data-title="Title 1" data-description="Image 1" />
                            </a></li>
                    </ul>
                </fieldset>
            </div>
    </div>
    <div class="row-fluid">
        <div id="searchForm" class="span5">
            <form data-bind="submit: search">
            <fieldset>
                <legend>Search </legend>
                <div class="control-group">
                    <label class="control-label" for="name">
                        From</label>
                    <div class="controls">
                        <input type="text" name="fromSeach" placeholder="select day" data-bind="value: from" />
                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label" for="name">
                        To</label>
                    <div class="controls">
                        <input type="text" name="toSearch" placeholder="select day" data-bind="value: to" />
                    </div>
                </div>
                <div class="control-group">
                    <div class="controls">
                        <button class="btn btn-primary" data-bind="click: search">
                            Search
                        </button>
                    </div>
                </div>
            </fieldset>
            </form>
        </div>
        <div class="span5">
            <div id="searchResult">
                <fieldset>
                    <legend>Search Result</legend>
                </fieldset>
                <table class="table table-striped table-bordered table-hover table-condensed">
                    <thead>
                        <tr>
                            <th>
                                Id
                            </th>
                            <th>
                                CreatedDate
                            </th>
                            <th>
                            </th>
                        </tr>
                    </thead>
                    <tbody data-bind="foreach: measurements">
                        <tr>
                            <td data-bind="text: Id">
                            </td>
                            <td data-bind="text: CreatedDate">
                            </td>
                            <td>
                                <button class="btn" data-bind="click: $root.show">
                                    <i class="icon-ok-sign"></i>
                                </button>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<style type="text/css">
    #slider
    {
        position: inherit;
        height: 70%;
    }
    #slideshow
    {
        left: 20px;
        float: left;
        margin: 20px;
        height: 420px;
    }
    
    #slideshow img
    {
        height: 400px;
        width: 400px;
        top: 0;
        left: 0;
        padding: 15px;
        border: 1px solid #ccc;
        background-color: #eee;
        -moz-border-radius: 10px;
        -webkit-border-radius: 10px;
    }
    #nav
    {
        width: 470px;
        margin: 15px 15px 15px 45px;
        float: left;
        position: inherit;
    }
    #nav li
    {
        width: 82px;
        height: 82px;
        float: left;
        margin: 8px;
        list-style: none;
    }
    #nav a
    {
        width: 80px;
        height: 80px;
        padding: 3px;
        display: block;
        border: 1px solid #ccc;
    }
    #nav li.activeLI a
    {
        background: #1e90ff;
    }
    #nav a:focus
    {
        outline: none;
    }
    #nav img
    {
        border: none;
        display: block;
        height: 80px;
    }
</style>
<script src="/scripts/jquery.js" type="text/javascript"></script>
<script src="/scripts/jquery.ui.js" type="text/javascript"></script>
<script src="/scripts/jquery.cycle.js" type="text/javascript"></script>
<script src="/scripts/knockout.js" type="text/javascript"></script>
<script type="text/javascript">
//    function MeasurementViewModel(data) {
//        var self = this;
//        self.Id = ko.observable();
//        self.GymnastId = ko.observable();
//        self.Weight = ko.observable();
//        self.Neck = ko.observable();
//        self.Shoulders = ko.observable();
//        self.RightArm = ko.observable();
//        self.LeftArm = ko.observable();
//        self.Chest = ko.observable();
//        self.BellyButton = ko.observable();
//        self.Hips = ko.observable();
//        self.RightThigh = ko.observable();
//        self.LeftThigh = ko.observable();
//        self.RightCalf = ko.observable();
//        self.LeftCalf = ko.observable();
//        self.Arm = ko.observable();
//        self.Waist = ko.observable();
//        self.Thigh = ko.observable();
//        self.Back = ko.observable();
//        self.CreatedDate = ko.observable();
//        self.HasPhotos = ko.observable();
//    }
    
    function MeasurementViewModel(data) {
        var self = this;
        self.Id = ko.observable(data.Id);
        self.GymnastId = ko.observable(data.GymnastId);
        self.Weight = ko.observable(data.Weight);
        self.Neck = ko.observable(data.Neck);
        self.Shoulders = ko.observable(data.Shoulders);
        self.RightArm = ko.observable(data.RightArm);
        self.LeftArm = ko.observable(data.LeftArm);
        self.Chest = ko.observable(data.Chest);
        self.BellyButton = ko.observable(data.BellyButton);
        self.Hips = ko.observable(data.Hips);
        self.RightThigh = ko.observable(data.RightThigh);
        self.LeftThigh = ko.observable(data.LeftThigh);
        self.RightCalf = ko.observable(data.RightCalf);
        self.LeftCalf = ko.observable(data.LeftCalf);
        self.Arm = ko.observable(data.Arm);
        self.Waist = ko.observable(data.Waist);
        self.Thigh = ko.observable(data.Thigh);
        self.Back = ko.observable(data.Back);
        self.CreatedDate = ko.observable(data.CreatedDate);
        self.HasPhotos = ko.observable(data.HasPhotos);
    }

    function MeasurementsViewModel() {
        var self = this;
        self.measurement = new MeasurementViewModel({});
        self.measurements = ko.observableArray();
        self.show = function (measurement) {
            var m = ko.toJS(measurement);
            self.refresh(m);
            self.getMeasurementPhoto(m.Id);
            self.slideshow();
        };
        self.photos = ko.observableArray();
        self.from = ko.observable("");
        self.to = ko.observable("");
        self.search = function () {
            $.get('/api/member/SelectMeasurementByGymnastByDate', { gymnastId: @gymnastId, fromDate: self.from(), toDate: self.to() }, function (data) {
                self.measurements.removeAll();
                self.measurements(ko.utils.arrayMap(data, function(measurement) {
                    return new MeasurementViewModel(measurement);
                }));
            });
        };
        self.lastMeasurement = function() {
            $('#content-measurement').ajaxLoading();
            $.ajax({
                type: "GET",
                async: false,
                //cache: false,
                url: '/api/member/SelectLastMeasurement',
                data: { gymnastId: @gymnastId },
                //dataType: 'json',
                contentType: "application/json; charset=utf-8",
                success: function(data) {
                    self.refresh(data);
                    self.getMeasurementPhoto(data.Id);
                    self.slideshow();
                    $('#content-measurement').closeLoading();
                },
                error: function(xhr, ajaxOptions, thrownError) {
                    alert('Error: ' + xhr.status + ' ' + xhr.statusText);
                }
            });
        };
        self.slideshow = function() {
             //if ($('#slideshow').hasClass('cycle')) $('#slideshow').cycle('destroy');
             $.fn.cycle.updateActivePagerLink = function(pager, currSlideIndex, clsName) {
                        $(pager).find('li').removeClass('activeLI').filter('li:eq(' + currSlideIndex + ')').addClass('activeLI');
                        //$(pager).children().removeClass('activeLI').filter(':eq(' + currSlideIndex + ')').addClass('activeLI');
                        //var title = $(pager).find('li').filter(':eq(' + currSlideIndex + ')').find('img').attr('data-title');
                        //var description = $(pager).find('li').filter(':eq(' + currSlideIndex + ')').find('img').attr('data-description');
                        //$('#dataInfo').html('<h3>' + title + '</h3><br>').append('<div>' + description + '</div>');
                    };

                    $('#slideshow').cycle({
                        fx: 'fade',
                        sync: true,
                        speed: 1000,
                        timeout: 4000,
                        pager: '#nav',
                        pagerAnchorBuilder: function(idx, slide) {
                            // return sel string for existing anchor
                            return '#nav li:eq(' + (idx) + ') a';
                        }
                    });
        };
        self.getMeasurementPhoto = function(id) {
            $.ajax({
                type: "GET",
                async: false,
                //cache: false,
                url: '/api/member/GetMeasurementPhoto',
                data: { Id: id, base64: true },
                //dataType: 'json',
                contentType: "application/json; charset=utf-8",
                success: function(data) {
                    self.photos.removeAll();
                    self.photos(ko.utils.arrayMap(data, function(photo) {
                        return { FileName: photo.FileName, Base64: photo.Base64 };
                    }));
                },
                error: function(xhr, ajaxOptions, thrownError) {
                    alert('Error: ' + xhr.status + ' ' + xhr.statusText);
                }
            });
        };
        self.refresh = function(data) {
            self.measurement.Id(data.Id);
            self.measurement.GymnastId(data.GymnastId);
            self.measurement.Weight(data.Weight);
            self.measurement.Neck(data.Neck);
            self.measurement.Shoulders(data.Shoulders);
            self.measurement.RightArm(data.RightArm);
            self.measurement.LeftArm(data.LeftArm);
            self.measurement.Chest(data.Chest);
            self.measurement.BellyButton(data.BellyButton);
            self.measurement.Hips(data.Hips);
            self.measurement.RightThigh(data.RightThigh);
            self.measurement.LeftThigh(data.LeftThigh);
            self.measurement.RightCalf(data.RightCalf);
            self.measurement.LeftCalf(data.LeftCalf);
            self.measurement.Arm(data.Arm);
            self.measurement.Waist(data.Waist);
            self.measurement.Thigh(data.Thigh);
            self.measurement.Back(data.Back);
            self.measurement.CreatedDate(data.CreatedDate);
            self.measurement.HasPhotos(data.HasPhotos);
        };
    }

    $(document).ready(function() {

        $('input[name="fromSeach"]').datepicker();
        $('input[name="toSearch"]').datepicker();

        var model = new MeasurementsViewModel();
        ko.applyBindings(model, $('#content-measurement')[0]);
        model.lastMeasurement();
        

        //$.get('/api/member/SelectLastMeasurement', { gymnastId: @gymnastId }, function (data) {
        //ko.applyBindings(new SearchViewModel(), $('#searchForm')[0]);
        //ko.applyBindings(new MeasurementsViewModel([{}]), $('#searchResult')[0]);
        //ko.applyBindings(new MeasurementViewModel(data), $('#dataInfo')[0]);
        //$.get('/api/member/GetMeasurementPhoto', { Id: data.Id, base64: true }, function (data1) {
        //ko.applyBindings(new PhotosViewModel(data1), $('#slider')[0]);
        // $('#carousel').cycle({
        //     fx: 'scrollHorz',
        //     speed: 'fast',
        //     timeout: 0,
        //     next: '#next',
        //     prev: '#prev',
        //     before: function () {

        //     },
        //     after: function () {
        //         $('#dataInfo').html('<h3>' + $(this).attr('data-title') + '</h3><br>').append('<div>' + $(this).attr('data-description') + '</div>');
        //     }
        // });
//                $.fn.cycle.updateActivePagerLink = function (pager, currSlideIndex, clsName) {
//                    $(pager).find('li').removeClass('activeLI').filter('li:eq(' + currSlideIndex + ')').addClass('activeLI');
//                    //$(pager).children().removeClass('activeLI').filter(':eq(' + currSlideIndex + ')').addClass('activeLI');
//                    //var title = $(pager).find('li').filter(':eq(' + currSlideIndex + ')').find('img').attr('data-title');
//                    //var description = $(pager).find('li').filter(':eq(' + currSlideIndex + ')').find('img').attr('data-description');
//                    //$('#dataInfo').html('<h3>' + title + '</h3><br>').append('<div>' + description + '</div>');
//                };

//                $('#slideshow').cycle({
//                    fx: 'fade',
//                    sync: true,
//                    speed: 1000,
//                    timeout: 4000,
//                    pager: '#nav',
//                    pagerAnchorBuilder: function (idx, slide) {
//                        // return sel string for existing anchor
//                       return '#nav li:eq(' + (idx) + ') a';
//                    }
//                });


        //});
        //});
    });
</script>
