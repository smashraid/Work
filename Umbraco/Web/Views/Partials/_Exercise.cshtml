@using umbraco.cms.businesslogic.datatype
@model Exercise
    <div class="form-horizontal">
        <div class="control-group">
            <label class="control-label" for="CategoryId">
                Category
            </label>
            <div class="controls">
                @{
                    Html.Action("GetPrevalue", "DataTypeSurface", new { id = 1225 });
                    IEnumerable<PreValue> categories = (IEnumerable<PreValue>)TempData["resource"];
                    List<SelectListItem> categoryList = new List<SelectListItem>(categories.Select(x => new SelectListItem { Text = x.Value, Value = x.Id.ToString() }));

                }
                @Html.DropDownListFor(x => x.CategoryId, new SelectList(categoryList, "Value", "Text"), "Choise...")
                @* <select name="ctl00$body$ddlCategory" id="body_ddlCategory">
                <option value="242">Category 1</option>
                <option value="243">Category 2</option>
                <option value="244">Category 3</option>
            </select>*@
            </div>
        </div>
        <div class="control-group">
            <label class="control-label" for="ExerciseName">
                Name
            </label>
            <div class="controls">
                <input name="ExerciseName" type="text" value="" id="ExerciseName">
            </div>
        </div>
        <div class="control-group">
            <label class="control-label" for="Description">
                Description
            </label>
            <div class="controls">
                <textarea id="Description" name="Description" rows="5" cols="30" id="Description"></textarea>
            </div>
        </div>
        <div class="control-group">
            <label class="control-label" for="TypeId">
                Type
            </label>
            <div class="controls">
                @{
                    Html.Action("GetPrevalue", "DataTypeSurface", new { id = 1220 });
                    IEnumerable<PreValue> types = (IEnumerable<PreValue>)TempData["resource"];
                    List<SelectListItem> typeList = new List<SelectListItem>(types.Select(x => new SelectListItem { Text = x.Value, Value = x.Id.ToString() }));
                }
                @Html.DropDownListFor(x => x.TypeId, new SelectList(typeList, "Value", "Text"), "Choise...")
                @*            <select name="ctl00$body$ddlType" id="body_ddlType">
                <option value="206">Reps</option>
                <option value="207">Weight</option>
                <option value="208">Distance</option>
            </select>*@
            </div>
        </div>
        <div class="control-group">
            <label class="control-label" for="UnitId">
                Unit
            </label>
            <div class="controls">
                @{
                    Html.Action("GetPrevalue", "DataTypeSurface", new { id = 1219 });
                    IEnumerable<PreValue> units = (IEnumerable<PreValue>)TempData["resource"];
                    List<SelectListItem> unitList = new List<SelectListItem>(units.Select(x => new SelectListItem { Text = x.Value, Value = x.Id.ToString() }));
                }
                @Html.DropDownListFor(x => x.UnitId, new SelectList(unitList, "Value", "Text"), "Choise...")
                
                


                @*            <select name="ctl00$body$ddlUnit" id="body_ddlUnit">
                <option value="203">Miles</option>
                <option value="204">Pound</option>
                <option value="205">Times</option>
            </select>*@
            </div>
        </div>
        <div class="control-group">
            <div class="controls">
                <button type="submit" id="RegisterExercise" name="RegisterExercise" class="btn">
                    Add
                </button>
            </div>
        </div>
    </div>

<div id="body_pnlResult123456" class="control-group">
    <div>
    </div>
</div>
